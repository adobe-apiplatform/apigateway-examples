#  NGINX configuration file containing the endpoints for exposing
#   a lambda function as a REST api
# This configuration also shows how to combine a microservice with lambda

upstream microservice {
  # microservice.docker is defined by docker-compose
  server microservice.docker:8080;
}

server {
  listen 80;
  server_name localhost;

  set $service_name "microservice";

  include /etc/api-gateway/conf.d/includes/default_validators.conf;
  include /etc/api-gateway/conf.d/includes/resolvers.conf;
  include /etc/api-gateway/environment.conf.d/api-gateway-env-vars.server.conf;

  access_log /dev/stdout;            # redirect access_log to Docker's output
  error_log /dev/stderr debug;       # redirect error_log to Docker's output

  # define a new endpoint that goes to AWS Lambda
  location /api/hello {
    set $aws_region us-east-1;
    default_type application/json;
    content_by_lua_file /etc/api-gateway/generated-conf.d/lambda_invoker.lua;
  }

  # all other endpoints go to a microservice
  location /api {
    proxy_pass http://microservice;
  }


}
